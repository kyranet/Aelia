import { Language, util } from 'klasa';

/* tslint:disable object-literal-sort-keys */
export default class extends Language {

	public language = {
		/**
		 * KLASA 0.5.0
		 * https://github.com/dirigeants/klasa/blob/master/src/languages/en-US.js
		 */
		DEFAULT: (key) => `${key} has not been localized for en-US yet.`,
		DEFAULT_LANGUAGE: 'Default Language',
		PREFIX_REMINDER: (prefix = `@${this.client.user.tag}`) => `The prefix${Array.isArray(prefix) ?
			`es for this guild are: ${prefix.map((pre) => `\`${pre}\``).join(', ')}` :
			` in this guild is set to: \`${prefix}\``
			}`,
		SETTING_GATEWAY_EXPECTS_GUILD: 'The parameter <Guild> expects either a Guild or a Guild Object.',
		SETTING_GATEWAY_VALUE_FOR_KEY_NOEXT: (data, key) => `The value ${data} for the key ${key} does not exist.`,
		SETTING_GATEWAY_VALUE_FOR_KEY_ALREXT: (data, key) => `The value ${data} for the key ${key} already exists.`,
		SETTING_GATEWAY_SPECIFY_VALUE: 'You must specify the value to add or filter.',
		SETTING_GATEWAY_KEY_NOT_ARRAY: (key) => `The key ${key} is not an Array.`,
		SETTING_GATEWAY_KEY_NOEXT: (key) => `The key ${key} does not exist in the current data schema.`,
		SETTING_GATEWAY_INVALID_TYPE: 'The type parameter must be either add or remove.',
		SETTING_GATEWAY_INVALID_FILTERED_VALUE: (piece, value) => `${piece.key} doesn't accept the value: ${value}`,
		RESOLVER_MULTI_TOO_FEW: (name, min = 1) => `Provided too few ${name}s. Atleast ${min} ${min === 1 ? 'is' : 'are'} required.`,
		RESOLVER_INVALID_BOOL: (name) => `${name} must be true or false.`,
		RESOLVER_INVALID_CHANNEL: (name) => `${name} must be a channel tag or valid channel id.`,
		RESOLVER_INVALID_CUSTOM: (name, type) => `${name} must be a valid ${type}.`,
		RESOLVER_INVALID_DATE: (name) => `${name} must be a valid date.`,
		RESOLVER_INVALID_DURATION: (name) => `${name} must be a valid duration string.`,
		RESOLVER_INVALID_EMOJI: (name) => `${name} must be a custom emoji tag or valid emoji id.`,
		RESOLVER_INVALID_FLOAT: (name) => `${name} must be a valid number.`,
		RESOLVER_INVALID_GUILD: (name) => `${name} must be a valid guild id.`,
		RESOLVER_INVALID_INT: (name) => `${name} must be an integer.`,
		RESOLVER_INVALID_LITERAL: (name) => `Your option did not match the only possibility: ${name}`,
		RESOLVER_INVALID_MEMBER: (name) => `${name} must be a mention or valid user id.`,
		RESOLVER_INVALID_MESSAGE: (name) => `${name} must be a valid message id.`,
		RESOLVER_INVALID_PIECE: (name, piece) => `${name} must be a valid ${piece} name.`,
		RESOLVER_INVALID_REGEX_MATCH: (name, pattern) => `${name} must follow this regex pattern \`${pattern}\`.`,
		RESOLVER_INVALID_ROLE: (name) => `${name} must be a role mention or role id.`,
		RESOLVER_INVALID_STRING: (name) => `${name} must be a valid string.`,
		RESOLVER_INVALID_TIME: (name) => `${name} must be a valid duration or date string.`,
		RESOLVER_INVALID_URL: (name) => `${name} must be a valid url.`,
		RESOLVER_INVALID_USER: (name) => `${name} must be a mention or valid user id.`,
		RESOLVER_STRING_SUFFIX: ' characters',
		RESOLVER_MINMAX_EXACTLY: (name, min, suffix) => `${name} must be exactly ${min}${suffix}.`,
		RESOLVER_MINMAX_BOTH: (name, min, max, suffix) => `${name} must be between ${min} and ${max}${suffix}.`,
		RESOLVER_MINMAX_MIN: (name, min, suffix) => `${name} must be greater than ${min}${suffix}.`,
		RESOLVER_MINMAX_MAX: (name, max, suffix) => `${name} must be less than ${max}${suffix}.`,
		REACTIONHANDLER_PROMPT: 'Which page would you like to jump to?',
		COMMANDMESSAGE_MISSING: 'Missing one or more required arguments after end of input.',
		COMMANDMESSAGE_MISSING_REQUIRED: (name) => `${name} is a required argument.`,
		COMMANDMESSAGE_MISSING_OPTIONALS: (possibles) => `Missing a required option: (${possibles})`,
		COMMANDMESSAGE_NOMATCH: (possibles) => `Your option didn't match any of the possibilities: (${possibles})`,
		MONITOR_COMMAND_HANDLER_REPROMPT: (tag, error, time) => `${tag} | **${error}** | You have **${time}** seconds to respond to this prompt with a valid argument. Type **"ABORT"** to abort this prompt.`, // eslint-disable-line max-len
		MONITOR_COMMAND_HANDLER_REPEATING_REPROMPT: (tag, name, time) => `${tag} | **${name}** is a repeating argument | You have **${time}** seconds to respond to this prompt with additional valid arguments. Type **"CANCEL"** to cancel this prompt.`, // eslint-disable-line max-len
		MONITOR_COMMAND_HANDLER_ABORTED: 'Aborted',
		INHIBITOR_COOLDOWN: (remaining) => `You have just used this command. You can use this command again in ${remaining} second${remaining === 1 ? '' : 's'}.`,
		INHIBITOR_DISABLED: 'This command is currently disabled.',
		INHIBITOR_MISSING_BOT_PERMS: (missing) => `Insufficient permissions, missing: **${missing}**`,
		INHIBITOR_NSFW: 'You may not use NSFW commands in this channel.',
		INHIBITOR_PERMISSIONS: 'You do not have permission to use this command.',
		INHIBITOR_REQUIRED_SETTINGS: (settings) => `The guild is missing the **${settings.join(', ')}** guild setting${settings.length !== 1 ? 's' : ''} and thus the command cannot run.`,
		INHIBITOR_RUNIN: (types) => `This command is only available in ${types} channels.`,
		INHIBITOR_RUNIN_NONE: (name) => `The ${name} command is not configured to run in any channel.`,
		COMMAND_BLACKLIST_DESCRIPTION: 'Blacklists or un-blacklists users and guilds from the bot.',
		COMMAND_BLACKLIST_SUCCESS: (usersAdded, usersRemoved, guildsAdded, guildsRemoved) => [
			usersAdded.length ? `**Users Added**\n${util.codeBlock('', usersAdded.join(', '))}` : '',
			usersRemoved.length ? `**Users Removed**\n${util.codeBlock('', usersRemoved.join(', '))}` : '',
			guildsAdded.length ? `**Guilds Added**\n${util.codeBlock('', guildsAdded.join(', '))}` : '',
			guildsRemoved.length ? `**Guilds Removed**\n${util.codeBlock('', guildsRemoved.join(', '))}` : ''
		].filter((val) => val !== '').join('\n'),
		COMMAND_EVAL_DESCRIPTION: 'Evaluates arbitrary Javascript. Reserved for bot owner.',
		COMMAND_EVAL_EXTENDEDHELP: [
			'The eval command evaluates code as-in, any error thrown from it will be handled.',
			'It also uses the flags feature. Write --silent, --depth=number or --async to customize the output.',
			'The --silent flag will make it output nothing.',
			"The --depth flag accepts a number, for example, --depth=2, to customize util.inspect's depth.",
			'The --async flag will wrap the code into an async function where you can enjoy the use of await, however, if you want to return something, you will need the return keyword.',
			'The --showHidden flag will enable the showHidden option in util.inspect.',
			'If the output is too large, it\'ll send the output as a file, or in the console if the bot does not have the ATTACH_FILES permission.'
		].join('\n'),
		COMMAND_EVAL_ERROR: (time, output, type) => `**Error**:${output}\n**Type**:${type}\n${time}`,
		COMMAND_EVAL_OUTPUT: (time, output, type) => `**Output**:${output}\n**Type**:${type}\n${time}`,
		COMMAND_EVAL_SENDFILE: (time, type) => `Output was too long... sent the result as a file.\n**Type**:${type}\n${time}`,
		COMMAND_EVAL_SENDCONSOLE: (time, type) => `Output was too long... sent the result to console.\n**Type**:${type}\n${time}`,
		COMMAND_UNLOAD: (type, name) => `✅ Unloaded ${type}: ${name}`,
		COMMAND_UNLOAD_DESCRIPTION: 'Unloads the klasa piece.',
		COMMAND_UNLOAD_WARN: 'You probably don\'t want to unload that, since you wouldn\'t be able to run any command to enable it again',
		COMMAND_TRANSFER_ERROR: '❌ That file has been transfered already or never existed.',
		COMMAND_TRANSFER_SUCCESS: (type, name) => `✅ Successfully transferred ${type}: ${name}.`,
		COMMAND_TRANSFER_FAILED: (type, name) => `Transfer of ${type}: ${name} to Client has failed. Please check your Console.`,
		COMMAND_TRANSFER_DESCRIPTION: 'Transfers a core piece to its respective folder.',
		COMMAND_RELOAD: (type, name, time) => `✅ Reloaded ${type}: ${name}. (Took: ${time})`,
		COMMAND_RELOAD_FAILED: (type, name) => `❌ Failed to reload ${type}: ${name}. Please check your Console.`,
		COMMAND_RELOAD_ALL: (type, time) => `✅ Reloaded all ${type}. (Took: ${time})`,
		COMMAND_RELOAD_EVERYTHING: (time) => `✅ Reloaded everything. (Took: ${time})`,
		COMMAND_RELOAD_DESCRIPTION: 'Reloads a klasa piece, or all pieces of a klasa store.',
		COMMAND_REBOOT: 'Rebooting...',
		COMMAND_REBOOT_DESCRIPTION: 'Reboots the bot.',
		COMMAND_LOAD: (time, type, name) => `✅ Successfully loaded ${type}: ${name}. (Took: ${time})`,
		COMMAND_LOAD_FAIL: 'The file does not exist, or an error occurred while loading your file. Please check your console.',
		COMMAND_LOAD_ERROR: (type, name, error) => `❌ Failed to load ${type}: ${name}. Reason:${util.codeBlock('js', error)}`,
		COMMAND_LOAD_DESCRIPTION: 'Load a piece from your bot.',
		COMMAND_PING: 'Ping?',
		COMMAND_PING_DESCRIPTION: 'Runs a connection test to Discord.',
		COMMAND_PINGPONG: (diff, ping) => `Pong! (Roundtrip took: ${diff}ms. Heartbeat: ${ping}ms.)`,
		COMMAND_INVITE_DESCRIPTION: 'Displays the join guild link of the bot.',
		COMMAND_INFO_DESCRIPTION: 'Provides some information about this bot.',
		COMMAND_HELP_DESCRIPTION: 'Display help for a command.',
		COMMAND_HELP_NO_EXTENDED: 'No extended help available.',
		COMMAND_HELP_DM: '📥 | The list of commands you have access to has been sent to your DMs.',
		COMMAND_HELP_NODM: '❌ | You have DMs disabled, I couldn\'t send you the commands in DMs.',
		COMMAND_HELP_USAGE: (usage) => `Usage :: ${usage}`,
		COMMAND_HELP_EXTENDED: 'Extended Help ::',
		COMMAND_ENABLE: (type, name) => `+ Successfully enabled ${type}: ${name}`,
		COMMAND_ENABLE_DESCRIPTION: 'Re-enables or temporarily enables a command/inhibitor/monitor/finalizer. Default state restored on reboot.',
		COMMAND_DISABLE: (type, name) => `+ Successfully disabled ${type}: ${name}`,
		COMMAND_DISABLE_DESCRIPTION: 'Re-disables or temporarily disables a command/inhibitor/monitor/finalizer/event. Default state restored on reboot.',
		COMMAND_DISABLE_WARN: 'You probably don\'t want to disable that, since you wouldn\'t be able to run any command to enable it again',
		COMMAND_CONF_NOKEY: 'You must provide a key',
		COMMAND_CONF_NOVALUE: 'You must provide a value',
		COMMAND_CONF_GUARDED: (name) => `${util.toTitleCase(name)} may not be disabled.`,
		COMMAND_CONF_UPDATED: (key, response) => `Successfully updated the key **${key}**: \`${response}\``,
		COMMAND_CONF_KEY_NOT_ARRAY: 'This key is not array type. Use the action \'reset\' instead.',
		COMMAND_CONF_GET_NOEXT: (key) => `The key **${key}** does not seem to exist.`,
		COMMAND_CONF_GET: (key, value) => `The value for the key **${key}** is: \`${value}\``,
		COMMAND_CONF_RESET: (key, response) => `The key **${key}** has been reset to: \`${response}\``,
		COMMAND_CONF_NOCHANGE: (key) => `The value for **${key}** was already that value.`,
		COMMAND_CONF_SERVER_DESCRIPTION: 'Define per-guild settings.',
		COMMAND_CONF_SERVER: (key, list) => `**Guild Settings${key}**\n${list}`,
		COMMAND_CONF_USER_DESCRIPTION: 'Define per-user settings.',
		COMMAND_CONF_USER: (key, list) => `**User Settings${key}**\n${list}`,
		COMMAND_STATS: (memUsage, uptime, users, guilds, channels, klasaVersion, discordVersion, processVersion, message) => [
			'= STATISTICS =',
			'',
			`• Mem Usage  :: ${memUsage} MB`,
			`• Uptime     :: ${uptime}`,
			`• Users      :: ${users}`,
			`• Guilds     :: ${guilds}`,
			`• Channels   :: ${channels}`,
			`• Klasa      :: v${klasaVersion}`,
			`• Discord.js :: v${discordVersion}`,
			`• Node.js    :: ${processVersion}`,
			`• Shard      :: ${(message.guild ? message.guild.shardID : 0) + 1} / ${this.client.options.totalShardCount}`
		],
		COMMAND_STATS_DESCRIPTION: 'Provides some details about the bot and stats.',
		MESSAGE_PROMPT_TIMEOUT: 'The prompt has timed out.',

		/**
		 * AELIA
		 */
		COMMAND_INVITE: () => [
			`To add me to your discord guild: <${this.client.invite}>`,
			`Don't be afraid to uncheck some permissions, I will let you know if you're trying to run a command without permissions.`
		].join('\n'),
		COMMAND_INFO: [
			`Aelia 4.0.0 is a Music Discord Bot designed to run alongside Skyra with a great performance and constant 24/7 uptime.`,
			`I am built on top of Klasa, a 'plug-and-play' framework built on top of the Discord.js library.`,
			``,
			`Aelia features:`,
			`• Editable Commands`,
			`• Multi-language support`,
			`• Party tools! 🎉`
		].join('\n'),

		COMMAND_ADD_DESCRIPTION: `Adds a song the the queue.`,
		COMMAND_ADD_PLAYLIST: (amount) => `🎵 Added **${amount}** ${amount === 1 ? 'song' : 'songs'} to the queue 🎶`,
		COMMAND_ADD_SONG: (title) => `🎵 Added **${title}** to the queue 🎶`,
		COMMAND_CLEAR_DESCRIPTION: `Clears the queue list.`,
		COMMAND_CLEAR_DENIED: `You can't execute this command when there are over 4 members! You must be the Dj of this party!`,
		COMMAND_CLEAR_SUCCESS: (amount) => `🗑 Pruned ${amount} songs.`,
		COMMAND_JOIN_DESCRIPTION: `Joins the message author's voice channel.`,
		COMMAND_JOIN_NO_MEMBER: `I am sorry, but Discord did not tell me the information I need, so I do not know what voice channel are you connected to...`,
		COMMAND_JOIN_NO_VOICECHANNEL: `You are not connected in a voice channel.`,
		COMMAND_JOIN_SUCCESS: (channel) => `Successfully joined the voice channel ${channel}`,
		COMMAND_JOIN_VOICE_DIFFERENT: `I am sorry, but I am playing music in another channel, perhaps try later or ask nicely to the people who came first to join them!`,
		COMMAND_JOIN_VOICE_FULL: `I cannot join your voice channel, it's full... kick somebody with the boot or make room for me!`,
		COMMAND_JOIN_VOICE_NO_CONNECT: `I do not have enough permissions to connect to your voice channel. I am missing the CONNECT permission.`,
		COMMAND_JOIN_VOICE_NO_SPEAK: `I can connect... but not speak. Please turn on this permission so I can emit music.`,
		COMMAND_JOIN_VOICE_SAME: `Turn on your volume! I am playing music there!`,
		COMMAND_LEAVE_DESCRIPTION: `Leaves the voice channel.`,
		COMMAND_LEAVE_SUCCESS: (channel) => `Successfully left the voice channel ${channel}`,
		COMMAND_PAUSE_DESCRIPTION: `Pauses the current song.`,
		COMMAND_PAUSE_SUCCESS: '⏸ Paused',
		COMMAND_PLAY_DESCRIPTION: `Let's start the queue!`,
		COMMAND_PLAY_END: `⏹ From 1 to 10, being 1 the worst score and 10 the best, how would you rate the session? It just ended!`,
		COMMAND_PLAY_NEXT: (song) => `🎧 Playing: **${song.title}** as requested by: **${song.requester}**`,
		COMMAND_PLAY_QUEUE_EMPTY: (prefix) => `Deck's empty my friend, add some songs to the queue with the \`${prefix}add\` command so I can play them.`,
		COMMAND_PLAY_QUEUE_PAUSED: (song) => `There was a track going on! Playing it back! Now playing: ${song}!`,
		COMMAND_PLAY_QUEUE_PLAYING: `Hey! The disk is already spinning!`,
		COMMAND_PLAYING_DESCRIPTION: `Get information from the current song.`,
		COMMAND_PLAYING_DURATION: (duration) => `**Duration**: ${duration}`,
		COMMAND_PLAYING_QUEUE_EMPTY: `Are you speaking to me? Because my deck is empty...`,
		COMMAND_PLAYING_QUEUE_NOT_PLAYING: `I think you're listening to background noise, I'm not playing anything.`,
		COMMAND_QUEUE_DESCRIPTION: `Check the queue list.`,
		COMMAND_QUEUE_EMPTY: (prefix) => `The queue is empty! You can add some songs using \`${prefix}add\`.`,
		COMMAND_QUEUE_LINE: (title, requester) => `*${title}* requested by **${requester}**`,
		COMMAND_QUEUE_TRUNCATED: (amount) => `Showing 10 songs of ${amount}`,
		COMMAND_REMOVE_DESCRIPTION: `Remove a song from the queue list.`,
		COMMAND_REMOVE_INDEX_INVALID: `Look, I am no expert in maths, but I kinda expected a number equal or bigger than 1...`,
		COMMAND_REMOVE_INDEX_OUT: (amount) => `I tried getting that song for you, but I only have ${amount} ${amount === 1 ? 'song' : 'songs'} in my deck!`,
		COMMAND_REMOVE_DENIED: [
			`I find it a bit rude to remove somebody else's songs from the list... Talk with them kindly, or`,
			`shout at a DJ if there is one in this guild, if it ruins the party, then they may consider to remove it!`
		].join(' '),
		COMMAND_REMOVE_SUCCESS: (song) => `🗑 Removed the song **${song.title}** requested by **${song.requester}**.`,
		COMMAND_RESUME_DESCRIPTION: `Resumes the current song.`,
		COMMAND_RESUME_SUCCESS: `▶ Resumed`,
		COMMAND_SKIP_DESCRIPTION: `Skip the current song.`,
		COMMAND_SKIP_PERMISSIONS: `You can't execute this command, you must be a DJ or a Moderator.`,
		COMMAND_SKIP_VOTES_VOTED: `You have already voted to skip this song.`,
		COMMAND_SKIP_VOTES_TOTAL: (amount, needed) => `🔸 | Votes: ${amount} of ${needed}`,
		COMMAND_SKIP_SUCCESS: (title) => `⏭ Skipped ${title}`,
		COMMAND_TIME_DESCRIPTION: `Check how much time is left for the song to end.`,
		COMMAND_TIME_QUEUE_EMPTY: `Are you speaking to me? Because my deck is empty...`,
		COMMAND_TIME_STREAM: `The current song is a stream, it doesn't have any remaining time.`,
		COMMAND_TIME_REMAINING: (time) => `🕰 Time remaining: ${time}`,
		COMMAND_VOLUME_DESCRIPTION: `Manage the volume for current song.`,
		COMMAND_VOLUME_SUCCESS: (volume) => `📢 Volume: ${volume}%`,
		COMMAND_VOLUME_CHANGED: (emoji, volume) => `${emoji} Volume: ${volume}%`,

		INHIBITOR_MUSIC_QUEUE_EMPTY: `The table is out of discs! Please add some so we can start the party!`,
		INHIBITOR_MUSIC_QUEUE_EMPTY_PLAYING: `The table is out of discs! Please add some to keep the spirit of this party still up!`,
		INHIBITOR_MUSIC_NOT_PLAYING_PAUSED: `The deck is paused! Come back when you want to fire the party up again!`,
		INHIBITOR_MUSIC_NOT_PLAYING_STOPPED: `The deck is empty! I'm pretty sure it's not playing anything!`,
		INHIBITOR_MUSIC_NOT_PAUSED_PLAYING: `The deck is playing and the party is still up 'till the night ends!`,
		INHIBITOR_MUSIC_NOT_PAUSED_STOPPED: `The deck is empty! I'll take that as the party is chill!`,
		INHIBITOR_MUSIC_DJ_MEMBER: `I believe this is something only a moderator or the manager of this party is supposed to do!`,
		INHIBITOR_MUSIC_USER_VOICE_CHANNEL: `Hey, I need you to join a voice channel before I can run this command!`,
		INHIBITOR_MUSIC_BOT_VOICE_CHANNEL: `I am afraid I need to be in a voice channel to operate this command, please show me the way!`,
		INHIBITOR_MUSIC_BOTH_VOICE_CHANNEL: `Hey! It looks like you're not in the same voice channel as me! Please come join me!`,

		MUSICMANAGER_FETCH_NO_MATCHES: `I'm sorry but I wasn't able to find the track!`,
		MUSICMANAGER_FETCH_LOAD_FAILED: `I'm sorry but I couldn't load this song! Maybe try other song!`,
		MUSICMANAGER_SETVOLUME_SILENT: `Woah, you can just leave the voice channel if you want silence!`,
		MUSICMANAGER_SETVOLUME_LOUD: `I'll be honest, an airplane's nacelle would be less noisy than this!`,
		MUSICMANAGER_PLAY_NO_VOICECHANNEL: `Where am I supposed to play the music? I am not in a voice channel!`,
		MUSICMANAGER_PLAY_NO_SONGS: `No songs left in the queue!`,
		MUSICMANAGER_PLAY_PLAYING: `Decks' spinning, can't you hear it?`,
		MUSICMANAGER_PLAY_DISCONNECTION: `I got disconnected forcefully!`,
		MUSICMANAGER_ERROR: (error) => `Something happened!\n${error}`,
		MUSICMANAGER_STUCK: (seconds) => `Hold on, I got a little problem, I'll be back in ${seconds === 1 ? 'a second' : `${seconds} seconds`}!`,
		MUSICMANAGER_CLOSE: `Whoops, looks like I got a little problem with Discord!`
	};

	public async init(): Promise<void> {
		// noop
	}

}
